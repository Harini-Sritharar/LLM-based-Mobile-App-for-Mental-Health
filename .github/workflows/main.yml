name: Flutter CI/CD
on:
  push:
    branches:
      - main
      - hs1922_ci_fix
jobs:
  setup:
    name: Setup Flutter Environment
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: 3.27.2
    outputs:
      flutter_cache_key: ${{ steps.generate-cache-key.outputs.flutter_cache_key }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Generate cache key
        id: generate-cache-key
        run: echo "flutter_cache_key=${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('llm_based_sat_app/pubspec.lock') }}" >> $GITHUB_OUTPUT

  build_android:
    name: Build Android App
    needs: setup
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: 3.27.2
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.flutter
          key: ${{ needs.setup.outputs.flutter_cache_key }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-

      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      # Pub Get with caching
      - name: Install Dependencies
        run: flutter pub get
        working-directory: llm_based_sat_app

      # Cache Gradle dependencies for Android
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            llm_based_sat_app/android/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('llm_based_sat_app/android/gradle/wrapper/gradle-wrapper.properties', 'llm_based_sat_app/android/build.gradle', 'llm_based_sat_app/android/app/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up JDK with cache
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: gradle

      # Build Android
      - name: Build APK
        run: flutter build apk --release --dart-define=CI=true
        working-directory: llm_based_sat_app
        
      # Upload artifacts
      - name: Archive APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: llm_based_sat_app/build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    name: Build iOS App
    needs: setup
    runs-on: macos-latest
    env:
      FLUTTER_VERSION: 3.27.2
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.flutter
          key: ${{ needs.setup.outputs.flutter_cache_key }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-

      # Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      # Pub Get with caching
      - name: Install Dependencies
        run: flutter pub get
        working-directory: llm_based_sat_app
        
      # Always clear Pods due to Firebase version issues
      - name: Clean Pods Directory
        run: |
          rm -rf Pods Podfile.lock
        working-directory: llm_based_sat_app/ios
        
      # Install CocoaPods
      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod repo update
        working-directory: llm_based_sat_app/ios
        
      # Fix Firebase version conflicts
      - name: Fix Firebase Versions
        run: |
          echo "Updating Firebase versions in Podfile"
          if grep -q "firebase_core" ../pubspec.yaml; then
            echo "platform :ios, '12.0'" > Podfile.new
            echo "" >> Podfile.new
            cat Podfile | grep -v "platform" >> Podfile.new
            mv Podfile.new Podfile
            
            # Add post_install hook if not present
            if ! grep -q "post_install" Podfile; then
              echo "" >> Podfile
              echo "post_install do |installer|" >> Podfile
              echo "  installer.pods_project.targets.each do |target|" >> Podfile
              echo "    target.build_configurations.each do |config|" >> Podfile
              echo "      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'" >> Podfile
              echo "    end" >> Podfile
              echo "  end" >> Podfile
              echo "end" >> Podfile
            fi
          fi
        working-directory: llm_based_sat_app/ios
        
      # Install iOS Dependencies with no cache due to Firebase issues
      - name: Install iOS Dependencies
        run: pod install --repo-update
        working-directory: llm_based_sat_app/ios

      # Build iOS
      - name: Build IPA
        run: flutter build ios --release --no-codesign
        working-directory: llm_based_sat_app
        
      # Upload artifacts
      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: llm_based_sat_app/build/ios/iphoneos/Runner.app